// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Session05.RelationConfiguration;

namespace Session05.RelationConfiguration.Migrations
{
    [DbContext(typeof(Session05Context))]
    [Migration("20210121073207_many-to-many")]
    partial class manytomany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Session05.RelationConfiguration.Attibutes.ChildAttr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("ParentIdFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("ChildAttr");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Attibutes.ParentAttr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("ParentAttrs");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ChidlFl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ParentFlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentFlId");

                    b.ToTable("ChidlFls");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ManyChild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ChildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OneParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OneParentId");

                    b.ToTable("ManyChild");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ManyLeft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManyLeft");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ManyRight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManyRight");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.OneChild", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ChildName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OneChild");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.OneParent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OneParent");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ParentFl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("parentFls");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.RelationManyToMany", b =>
                {
                    b.Property<int>("ManyLeftId")
                        .HasColumnType("int");

                    b.Property<int>("ManyRightId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("ManyLeftId", "ManyRightId");

                    b.HasIndex("ManyRightId");

                    b.ToTable("RelationManyToMany");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Attibutes.ChildAttr", b =>
                {
                    b.HasOne("Session05.RelationConfiguration.Attibutes.ParentAttr", "Parent")
                        .WithMany("ChildAttrs")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ChidlFl", b =>
                {
                    b.HasOne("Session05.RelationConfiguration.Fluens.ParentFl", "ParentFl")
                        .WithMany("ChidlFls")
                        .HasForeignKey("ParentFlId");

                    b.Navigation("ParentFl");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ManyChild", b =>
                {
                    b.HasOne("Session05.RelationConfiguration.Fluens.OneParent", null)
                        .WithMany("ManyChildren")
                        .HasForeignKey("OneParentId");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.OneChild", b =>
                {
                    b.HasOne("Session05.RelationConfiguration.Fluens.OneParent", null)
                        .WithOne("Child")
                        .HasForeignKey("Session05.RelationConfiguration.Fluens.OneChild", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.RelationManyToMany", b =>
                {
                    b.HasOne("Session05.RelationConfiguration.Fluens.ManyLeft", "ManyLeft")
                        .WithMany("RelationManyToMany")
                        .HasForeignKey("ManyLeftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Session05.RelationConfiguration.Fluens.ManyRight", "ManyRight")
                        .WithMany("RelationManyToMany")
                        .HasForeignKey("ManyRightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ManyLeft");

                    b.Navigation("ManyRight");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Attibutes.ParentAttr", b =>
                {
                    b.Navigation("ChildAttrs");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ManyLeft", b =>
                {
                    b.Navigation("RelationManyToMany");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ManyRight", b =>
                {
                    b.Navigation("RelationManyToMany");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.OneParent", b =>
                {
                    b.Navigation("Child");

                    b.Navigation("ManyChildren");
                });

            modelBuilder.Entity("Session05.RelationConfiguration.Fluens.ParentFl", b =>
                {
                    b.Navigation("ChidlFls");
                });
#pragma warning restore 612, 618
        }
    }
}
